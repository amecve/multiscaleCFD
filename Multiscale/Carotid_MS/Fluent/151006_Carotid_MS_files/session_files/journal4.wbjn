# encoding: utf-8
# Release 17.1
SetScriptVersion(Version="17.1.127")
system1 = GetSystem(Name="FFF")
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system1.Delete()
Save(Overwrite=True)
template1 = GetTemplate(TemplateName="Fluid Flow")
system2 = GetSystem(Name="FEM")
system3 = template1.CreateSystem(
    Position="Right",
    RelativeTo=system2)
modelComponent1 = system2.GetComponent(Name="Model")
meshComponent1 = system3.GetComponent(Name="Mesh")
modelComponent1.TransferData(TargetComponent=meshComponent1)
modelComponent1.Update(AllDependencies=True)
meshComponent1.Refresh()
meshComponent1.Update(AllDependencies=True)
setupComponent1 = system3.GetComponent(Name="Setup")
setupComponent1.Refresh()
setup2 = system3.GetContainer(ComponentName="Setup")
fluentLauncherSettings2 = setup2.GetFluentLauncherSettings()
fluentLauncherSettings2.SetEntityProperties(Properties=Set(Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessors=4))
setup2.Edit()
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table2(User Defined)*PushButton1(Functions)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Manage...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "UDF Library Manager*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table2(User Defined)*PushButton1(Functions)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Compiled...")')
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*Frame2*PushButton1( Add)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"Carotid_MS.c\") \"Source Files (*.c)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Compiled UDFs*Table1*Frame1*List1(Source Files)\" '( 0))(cx-gui-do cx-activate-item \"Compiled UDFs*Table1*Frame1*List1(Source Files)\")(cx-gui-do cx-activate-item \"Compiled UDFs*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Error*OK\")(cx-use-window-id 1)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
Save(Overwrite=True)
